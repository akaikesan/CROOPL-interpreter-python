class Root
    method root(int num, int root)
      local int bit = 1
        from bit = 1 do skip loop  
            call doublebit(bit)
        until (bit * bit) > num

        from (bit * bit) > num do skip loop
            uncall doublebit(bit)
            if ((root + bit) * (root + bit)) <= num then
                root += bit
            else
                skip
            fi (root / bit) % 2 != 0
        until bit = 1
      delocal int bit = 1
      num -= root * root

    method doublebit(int bit)
      local int z = bit
      bit += z
      delocal int z = bit / 2

class Program

    int num
    int root
    method main()
        num += 144
        local Root r = nil
          new  Root r
          call r::root(num, root)
          delete Root r
        delocal Root r = nil
        print root
